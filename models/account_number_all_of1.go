// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AccountNumberAllOf1 account number all of1
// swagger:model accountNumberAllOf1
type AccountNumberAllOf1 struct {

	// Unique ID of the account which rented this number
	AccountUID string `json:"account_uid,omitempty"`

	// Timestamp when this number was rented
	DateRented strfmt.DateTime `json:"date_rented,omitempty"`

	// number details
	NumberDetails *PhoneNumber `json:"number_details,omitempty"`
}

// Validate validates this account number all of1
func (m *AccountNumberAllOf1) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDateRented(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateNumberDetails(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AccountNumberAllOf1) validateDateRented(formats strfmt.Registry) error {

	if swag.IsZero(m.DateRented) { // not required
		return nil
	}

	if err := validate.FormatOf("date_rented", "body", "date-time", m.DateRented.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *AccountNumberAllOf1) validateNumberDetails(formats strfmt.Registry) error {

	if swag.IsZero(m.NumberDetails) { // not required
		return nil
	}

	if m.NumberDetails != nil {

		if err := m.NumberDetails.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("number_details")
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *AccountNumberAllOf1) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AccountNumberAllOf1) UnmarshalBinary(b []byte) error {
	var res AccountNumberAllOf1
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
