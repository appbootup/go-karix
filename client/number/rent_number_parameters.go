// Code generated by go-swagger; DO NOT EDIT.

package number

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/karixtech/go-karix/models"
)

// NewRentNumberParams creates a new RentNumberParams object
// with the default values initialized.
func NewRentNumberParams() *RentNumberParams {
	var (
		aPIVersionDefault = string("1.0")
	)
	return &RentNumberParams{
		APIVersion: &aPIVersionDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewRentNumberParamsWithTimeout creates a new RentNumberParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewRentNumberParamsWithTimeout(timeout time.Duration) *RentNumberParams {
	var (
		aPIVersionDefault = string("1.0")
	)
	return &RentNumberParams{
		APIVersion: &aPIVersionDefault,

		timeout: timeout,
	}
}

// NewRentNumberParamsWithContext creates a new RentNumberParams object
// with the default values initialized, and the ability to set a context for a request
func NewRentNumberParamsWithContext(ctx context.Context) *RentNumberParams {
	var (
		apiVersionDefault = string("1.0")
	)
	return &RentNumberParams{
		APIVersion: &apiVersionDefault,

		Context: ctx,
	}
}

// NewRentNumberParamsWithHTTPClient creates a new RentNumberParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewRentNumberParamsWithHTTPClient(client *http.Client) *RentNumberParams {
	var (
		apiVersionDefault = string("1.0")
	)
	return &RentNumberParams{
		APIVersion: &apiVersionDefault,
		HTTPClient: client,
	}
}

/*RentNumberParams contains all the parameters to send to the API endpoint
for the rent number operation typically these are written to a http.Request
*/
type RentNumberParams struct {

	/*APIVersion
	  API Version. If not specified your pinned verison is used.

	*/
	APIVersion *string
	/*Number
	  Rent Details object

	*/
	Number *models.RentNumber

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the rent number params
func (o *RentNumberParams) WithTimeout(timeout time.Duration) *RentNumberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the rent number params
func (o *RentNumberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the rent number params
func (o *RentNumberParams) WithContext(ctx context.Context) *RentNumberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the rent number params
func (o *RentNumberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the rent number params
func (o *RentNumberParams) WithHTTPClient(client *http.Client) *RentNumberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the rent number params
func (o *RentNumberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the rent number params
func (o *RentNumberParams) WithAPIVersion(aPIVersion *string) *RentNumberParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the rent number params
func (o *RentNumberParams) SetAPIVersion(aPIVersion *string) {
	o.APIVersion = aPIVersion
}

// WithNumber adds the number to the rent number params
func (o *RentNumberParams) WithNumber(number *models.RentNumber) *RentNumberParams {
	o.SetNumber(number)
	return o
}

// SetNumber adds the number to the rent number params
func (o *RentNumberParams) SetNumber(number *models.RentNumber) {
	o.Number = number
}

// WriteToRequest writes these params to a swagger request
func (o *RentNumberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.APIVersion != nil {

		// header param api-version
		if err := r.SetHeaderParam("api-version", *o.APIVersion); err != nil {
			return err
		}

	}

	if o.Number != nil {
		if err := r.SetBodyParam(o.Number); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
