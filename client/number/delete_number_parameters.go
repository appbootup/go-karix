// Code generated by go-swagger; DO NOT EDIT.

package number

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteNumberParams creates a new DeleteNumberParams object
// with the default values initialized.
func NewDeleteNumberParams() *DeleteNumberParams {
	var (
		aPIVersionDefault = string("1.0")
	)
	return &DeleteNumberParams{
		APIVersion: aPIVersionDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteNumberParamsWithTimeout creates a new DeleteNumberParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteNumberParamsWithTimeout(timeout time.Duration) *DeleteNumberParams {
	var (
		aPIVersionDefault = string("1.0")
	)
	return &DeleteNumberParams{
		APIVersion: aPIVersionDefault,

		timeout: timeout,
	}
}

// NewDeleteNumberParamsWithContext creates a new DeleteNumberParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteNumberParamsWithContext(ctx context.Context) *DeleteNumberParams {
	var (
		apiVersionDefault = string("1.0")
	)
	return &DeleteNumberParams{
		APIVersion: apiVersionDefault,

		Context: ctx,
	}
}

// NewDeleteNumberParamsWithHTTPClient creates a new DeleteNumberParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteNumberParamsWithHTTPClient(client *http.Client) *DeleteNumberParams {
	var (
		apiVersionDefault = string("1.0")
	)
	return &DeleteNumberParams{
		APIVersion: apiVersionDefault,
		HTTPClient: client,
	}
}

/*DeleteNumberParams contains all the parameters to send to the API endpoint
for the delete number operation typically these are written to a http.Request
*/
type DeleteNumberParams struct {

	/*APIVersion
	  API Version. If not specified your pinned verison is used.

	*/
	APIVersion string
	/*Num
	  Number which needs to be unrented

	*/
	Num int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete number params
func (o *DeleteNumberParams) WithTimeout(timeout time.Duration) *DeleteNumberParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete number params
func (o *DeleteNumberParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete number params
func (o *DeleteNumberParams) WithContext(ctx context.Context) *DeleteNumberParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete number params
func (o *DeleteNumberParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete number params
func (o *DeleteNumberParams) WithHTTPClient(client *http.Client) *DeleteNumberParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete number params
func (o *DeleteNumberParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIVersion adds the aPIVersion to the delete number params
func (o *DeleteNumberParams) WithAPIVersion(aPIVersion string) *DeleteNumberParams {
	o.SetAPIVersion(aPIVersion)
	return o
}

// SetAPIVersion adds the apiVersion to the delete number params
func (o *DeleteNumberParams) SetAPIVersion(aPIVersion string) {
	o.APIVersion = aPIVersion
}

// WithNum adds the num to the delete number params
func (o *DeleteNumberParams) WithNum(num int64) *DeleteNumberParams {
	o.SetNum(num)
	return o
}

// SetNum adds the num to the delete number params
func (o *DeleteNumberParams) SetNum(num int64) {
	o.Num = num
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteNumberParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param api-version
	if err := r.SetHeaderParam("api-version", o.APIVersion); err != nil {
		return err
	}

	// path param num
	if err := r.SetPathParam("num", swag.FormatInt64(o.Num)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
