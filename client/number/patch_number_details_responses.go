// Code generated by go-swagger; DO NOT EDIT.

package number

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/karixtech/go-karix/models"
)

// PatchNumberDetailsReader is a Reader for the PatchNumberDetails structure.
type PatchNumberDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchNumberDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchNumberDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPatchNumberDetailsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchNumberDetailsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchNumberDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPatchNumberDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchNumberDetailsOK creates a PatchNumberDetailsOK with default headers values
func NewPatchNumberDetailsOK() *PatchNumberDetailsOK {
	return &PatchNumberDetailsOK{}
}

/*PatchNumberDetailsOK handles this case with default header values.

Number object
*/
type PatchNumberDetailsOK struct {
	Payload *PatchNumberDetailsOKBody
}

func (o *PatchNumberDetailsOK) Error() string {
	return fmt.Sprintf("[PATCH /number/{num}/][%d] patchNumberDetailsOK  %+v", 200, o.Payload)
}

func (o *PatchNumberDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchNumberDetailsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNumberDetailsUnauthorized creates a PatchNumberDetailsUnauthorized with default headers values
func NewPatchNumberDetailsUnauthorized() *PatchNumberDetailsUnauthorized {
	return &PatchNumberDetailsUnauthorized{}
}

/*PatchNumberDetailsUnauthorized handles this case with default header values.

Authentication information is missing or invalid
*/
type PatchNumberDetailsUnauthorized struct {
	WWWAuthenticate string
}

func (o *PatchNumberDetailsUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /number/{num}/][%d] patchNumberDetailsUnauthorized ", 401)
}

func (o *PatchNumberDetailsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header WWW_Authenticate
	o.WWWAuthenticate = response.GetHeader("WWW_Authenticate")

	return nil
}

// NewPatchNumberDetailsForbidden creates a PatchNumberDetailsForbidden with default headers values
func NewPatchNumberDetailsForbidden() *PatchNumberDetailsForbidden {
	return &PatchNumberDetailsForbidden{}
}

/*PatchNumberDetailsForbidden handles this case with default header values.

User not authorized or blocked
*/
type PatchNumberDetailsForbidden struct {
	Payload *PatchNumberDetailsForbiddenBody
}

func (o *PatchNumberDetailsForbidden) Error() string {
	return fmt.Sprintf("[PATCH /number/{num}/][%d] patchNumberDetailsForbidden  %+v", 403, o.Payload)
}

func (o *PatchNumberDetailsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchNumberDetailsForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNumberDetailsNotFound creates a PatchNumberDetailsNotFound with default headers values
func NewPatchNumberDetailsNotFound() *PatchNumberDetailsNotFound {
	return &PatchNumberDetailsNotFound{}
}

/*PatchNumberDetailsNotFound handles this case with default header values.

Resource not found
*/
type PatchNumberDetailsNotFound struct {
	Payload *PatchNumberDetailsNotFoundBody
}

func (o *PatchNumberDetailsNotFound) Error() string {
	return fmt.Sprintf("[PATCH /number/{num}/][%d] patchNumberDetailsNotFound  %+v", 404, o.Payload)
}

func (o *PatchNumberDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchNumberDetailsNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchNumberDetailsInternalServerError creates a PatchNumberDetailsInternalServerError with default headers values
func NewPatchNumberDetailsInternalServerError() *PatchNumberDetailsInternalServerError {
	return &PatchNumberDetailsInternalServerError{}
}

/*PatchNumberDetailsInternalServerError handles this case with default header values.

Error
*/
type PatchNumberDetailsInternalServerError struct {
	Payload *PatchNumberDetailsInternalServerErrorBody
}

func (o *PatchNumberDetailsInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /number/{num}/][%d] patchNumberDetailsInternalServerError  %+v", 500, o.Payload)
}

func (o *PatchNumberDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PatchNumberDetailsInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PatchNumberDetailsForbiddenBody UnauthorizedResponse
swagger:model PatchNumberDetailsForbiddenBody
*/
type PatchNumberDetailsForbiddenBody struct {

	// error
	Error *PatchNumberDetailsForbiddenBodyError `json:"error,omitempty"`

	// meta
	Meta *models.MetaResponse `json:"meta,omitempty"`
}

// Validate validates this patch number details forbidden body
func (o *PatchNumberDetailsForbiddenBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchNumberDetailsForbiddenBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsForbidden" + "." + "error")
			}
			return err
		}
	}

	return nil
}

func (o *PatchNumberDetailsForbiddenBody) validateMeta(formats strfmt.Registry) error {

	if swag.IsZero(o.Meta) { // not required
		return nil
	}

	if o.Meta != nil {
		if err := o.Meta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsForbidden" + "." + "meta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchNumberDetailsForbiddenBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchNumberDetailsForbiddenBody) UnmarshalBinary(b []byte) error {
	var res PatchNumberDetailsForbiddenBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchNumberDetailsForbiddenBodyError patch number details forbidden body error
swagger:model PatchNumberDetailsForbiddenBodyError
*/
type PatchNumberDetailsForbiddenBodyError struct {

	// Forbidden Message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this patch number details forbidden body error
func (o *PatchNumberDetailsForbiddenBodyError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchNumberDetailsForbiddenBodyError) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchNumberDetailsForbidden"+"."+"error"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchNumberDetailsForbiddenBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchNumberDetailsForbiddenBodyError) UnmarshalBinary(b []byte) error {
	var res PatchNumberDetailsForbiddenBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchNumberDetailsInternalServerErrorBody ErrorResponse
swagger:model PatchNumberDetailsInternalServerErrorBody
*/
type PatchNumberDetailsInternalServerErrorBody struct {

	// error
	Error *PatchNumberDetailsInternalServerErrorBodyError `json:"error,omitempty"`

	// meta
	Meta *models.MetaResponse `json:"meta,omitempty"`
}

// Validate validates this patch number details internal server error body
func (o *PatchNumberDetailsInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchNumberDetailsInternalServerErrorBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsInternalServerError" + "." + "error")
			}
			return err
		}
	}

	return nil
}

func (o *PatchNumberDetailsInternalServerErrorBody) validateMeta(formats strfmt.Registry) error {

	if swag.IsZero(o.Meta) { // not required
		return nil
	}

	if o.Meta != nil {
		if err := o.Meta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsInternalServerError" + "." + "meta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchNumberDetailsInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchNumberDetailsInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res PatchNumberDetailsInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchNumberDetailsInternalServerErrorBodyError patch number details internal server error body error
swagger:model PatchNumberDetailsInternalServerErrorBodyError
*/
type PatchNumberDetailsInternalServerErrorBodyError struct {

	// Error Message
	// Required: true
	Message *string `json:"message"`

	// Parameter the error message is related to
	// `null` is the error is generic
	//
	Param *string `json:"param,omitempty"`
}

// Validate validates this patch number details internal server error body error
func (o *PatchNumberDetailsInternalServerErrorBodyError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchNumberDetailsInternalServerErrorBodyError) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchNumberDetailsInternalServerError"+"."+"error"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchNumberDetailsInternalServerErrorBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchNumberDetailsInternalServerErrorBodyError) UnmarshalBinary(b []byte) error {
	var res PatchNumberDetailsInternalServerErrorBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchNumberDetailsNotFoundBody NotFoundResponse
swagger:model PatchNumberDetailsNotFoundBody
*/
type PatchNumberDetailsNotFoundBody struct {

	// error
	Error *PatchNumberDetailsNotFoundBodyError `json:"error,omitempty"`

	// meta
	Meta *models.MetaResponse `json:"meta,omitempty"`
}

// Validate validates this patch number details not found body
func (o *PatchNumberDetailsNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateError(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchNumberDetailsNotFoundBody) validateError(formats strfmt.Registry) error {

	if swag.IsZero(o.Error) { // not required
		return nil
	}

	if o.Error != nil {
		if err := o.Error.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsNotFound" + "." + "error")
			}
			return err
		}
	}

	return nil
}

func (o *PatchNumberDetailsNotFoundBody) validateMeta(formats strfmt.Registry) error {

	if swag.IsZero(o.Meta) { // not required
		return nil
	}

	if o.Meta != nil {
		if err := o.Meta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsNotFound" + "." + "meta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchNumberDetailsNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchNumberDetailsNotFoundBody) UnmarshalBinary(b []byte) error {
	var res PatchNumberDetailsNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchNumberDetailsNotFoundBodyError patch number details not found body error
swagger:model PatchNumberDetailsNotFoundBodyError
*/
type PatchNumberDetailsNotFoundBodyError struct {

	// Error Message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this patch number details not found body error
func (o *PatchNumberDetailsNotFoundBodyError) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchNumberDetailsNotFoundBodyError) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("patchNumberDetailsNotFound"+"."+"error"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchNumberDetailsNotFoundBodyError) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchNumberDetailsNotFoundBodyError) UnmarshalBinary(b []byte) error {
	var res PatchNumberDetailsNotFoundBodyError
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PatchNumberDetailsOKBody AccountNumberResponse
swagger:model PatchNumberDetailsOKBody
*/
type PatchNumberDetailsOKBody struct {

	// data
	Data *models.AccountNumber `json:"data,omitempty"`

	// meta
	Meta *models.ObjectMetaResponse `json:"meta,omitempty"`
}

// Validate validates this patch number details o k body
func (o *PatchNumberDetailsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateData(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMeta(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PatchNumberDetailsOKBody) validateData(formats strfmt.Registry) error {

	if swag.IsZero(o.Data) { // not required
		return nil
	}

	if o.Data != nil {
		if err := o.Data.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsOK" + "." + "data")
			}
			return err
		}
	}

	return nil
}

func (o *PatchNumberDetailsOKBody) validateMeta(formats strfmt.Registry) error {

	if swag.IsZero(o.Meta) { // not required
		return nil
	}

	if o.Meta != nil {
		if err := o.Meta.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("patchNumberDetailsOK" + "." + "meta")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PatchNumberDetailsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PatchNumberDetailsOKBody) UnmarshalBinary(b []byte) error {
	var res PatchNumberDetailsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
