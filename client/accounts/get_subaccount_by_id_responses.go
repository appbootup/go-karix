// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/karixtech/go-karix/models"
)

// GetSubaccountByIDReader is a Reader for the GetSubaccountByID structure.
type GetSubaccountByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubaccountByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSubaccountByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSubaccountByIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSubaccountByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSubaccountByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSubaccountByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSubaccountByIDOK creates a GetSubaccountByIDOK with default headers values
func NewGetSubaccountByIDOK() *GetSubaccountByIDOK {
	return &GetSubaccountByIDOK{}
}

/*GetSubaccountByIDOK handles this case with default header values.

A subaccount object
*/
type GetSubaccountByIDOK struct {
	Payload *models.GetSubaccountByIDOKBody
}

func (o *GetSubaccountByIDOK) Error() string {
	return fmt.Sprintf("[GET /account/{uid}/][%d] getSubaccountByIdOK  %+v", 200, o.Payload)
}

func (o *GetSubaccountByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSubaccountByIDOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubaccountByIDUnauthorized creates a GetSubaccountByIDUnauthorized with default headers values
func NewGetSubaccountByIDUnauthorized() *GetSubaccountByIDUnauthorized {
	return &GetSubaccountByIDUnauthorized{}
}

/*GetSubaccountByIDUnauthorized handles this case with default header values.

Authentication information is missing or invalid
*/
type GetSubaccountByIDUnauthorized struct {
	WWWAuthenticate string
}

func (o *GetSubaccountByIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /account/{uid}/][%d] getSubaccountByIdUnauthorized ", 401)
}

func (o *GetSubaccountByIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header WWW_Authenticate
	o.WWWAuthenticate = response.GetHeader("WWW_Authenticate")

	return nil
}

// NewGetSubaccountByIDForbidden creates a GetSubaccountByIDForbidden with default headers values
func NewGetSubaccountByIDForbidden() *GetSubaccountByIDForbidden {
	return &GetSubaccountByIDForbidden{}
}

/*GetSubaccountByIDForbidden handles this case with default header values.

User not authorized or blocked
*/
type GetSubaccountByIDForbidden struct {
	Payload *models.GetSubaccountByIDForbiddenBody
}

func (o *GetSubaccountByIDForbidden) Error() string {
	return fmt.Sprintf("[GET /account/{uid}/][%d] getSubaccountByIdForbidden  %+v", 403, o.Payload)
}

func (o *GetSubaccountByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSubaccountByIDForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubaccountByIDNotFound creates a GetSubaccountByIDNotFound with default headers values
func NewGetSubaccountByIDNotFound() *GetSubaccountByIDNotFound {
	return &GetSubaccountByIDNotFound{}
}

/*GetSubaccountByIDNotFound handles this case with default header values.

Resource not found
*/
type GetSubaccountByIDNotFound struct {
	Payload *models.GetSubaccountByIDNotFoundBody
}

func (o *GetSubaccountByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /account/{uid}/][%d] getSubaccountByIdNotFound  %+v", 404, o.Payload)
}

func (o *GetSubaccountByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSubaccountByIDNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubaccountByIDInternalServerError creates a GetSubaccountByIDInternalServerError with default headers values
func NewGetSubaccountByIDInternalServerError() *GetSubaccountByIDInternalServerError {
	return &GetSubaccountByIDInternalServerError{}
}

/*GetSubaccountByIDInternalServerError handles this case with default header values.

Error
*/
type GetSubaccountByIDInternalServerError struct {
	Payload *models.GetSubaccountByIDInternalServerErrorBody
}

func (o *GetSubaccountByIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /account/{uid}/][%d] getSubaccountByIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubaccountByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSubaccountByIDInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
