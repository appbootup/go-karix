// Code generated by go-swagger; DO NOT EDIT.

package accounts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/karixtech/go-karix/models"
)

// GetSubaccountReader is a Reader for the GetSubaccount structure.
type GetSubaccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubaccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSubaccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSubaccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSubaccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSubaccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSubaccountOK creates a GetSubaccountOK with default headers values
func NewGetSubaccountOK() *GetSubaccountOK {
	return &GetSubaccountOK{}
}

/*GetSubaccountOK handles this case with default header values.

A list of account objects
*/
type GetSubaccountOK struct {
	Payload *models.GetSubaccountOKBody
}

func (o *GetSubaccountOK) Error() string {
	return fmt.Sprintf("[GET /account/][%d] getSubaccountOK  %+v", 200, o.Payload)
}

func (o *GetSubaccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSubaccountOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubaccountUnauthorized creates a GetSubaccountUnauthorized with default headers values
func NewGetSubaccountUnauthorized() *GetSubaccountUnauthorized {
	return &GetSubaccountUnauthorized{}
}

/*GetSubaccountUnauthorized handles this case with default header values.

Authentication information is missing or invalid
*/
type GetSubaccountUnauthorized struct {
	WWWAuthenticate string
}

func (o *GetSubaccountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /account/][%d] getSubaccountUnauthorized ", 401)
}

func (o *GetSubaccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header WWW_Authenticate
	o.WWWAuthenticate = response.GetHeader("WWW_Authenticate")

	return nil
}

// NewGetSubaccountForbidden creates a GetSubaccountForbidden with default headers values
func NewGetSubaccountForbidden() *GetSubaccountForbidden {
	return &GetSubaccountForbidden{}
}

/*GetSubaccountForbidden handles this case with default header values.

User not authorized or blocked
*/
type GetSubaccountForbidden struct {
	Payload *models.GetSubaccountForbiddenBody
}

func (o *GetSubaccountForbidden) Error() string {
	return fmt.Sprintf("[GET /account/][%d] getSubaccountForbidden  %+v", 403, o.Payload)
}

func (o *GetSubaccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSubaccountForbiddenBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubaccountInternalServerError creates a GetSubaccountInternalServerError with default headers values
func NewGetSubaccountInternalServerError() *GetSubaccountInternalServerError {
	return &GetSubaccountInternalServerError{}
}

/*GetSubaccountInternalServerError handles this case with default header values.

Error
*/
type GetSubaccountInternalServerError struct {
	Payload *models.GetSubaccountInternalServerErrorBody
}

func (o *GetSubaccountInternalServerError) Error() string {
	return fmt.Sprintf("[GET /account/][%d] getSubaccountInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSubaccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetSubaccountInternalServerErrorBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
